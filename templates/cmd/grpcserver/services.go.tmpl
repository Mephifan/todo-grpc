// Code generated by protoc-gen-gotemplate
package {{.Service.Name}}pb

import (
"golang.org/x/net/context"
)

type Service interface {
{{- range .Service.Method}}
{{- if and (not .ServerStreaming) (not .ClientStreaming)}}
{{.Name}}(context.Context, *{{.Name}}Request) (*{{.Name}}Response, error)
{{- else if and .ServerStreaming (not .ClientStreaming)}}
{{.Name}}(context.Context, *{{.Name}}Request, chan struct{}) (chan *{{.Name}}Response, error)
{{- else if and (not .ServerStreaming) .ClientStreaming}}
{{.Name}}(context.Context, chan *{{.Name}}Request) (*{{.Name}}Response, error)
{{- else if and (.ServerStreaming) (.ClientStreaming)}}
{{.Name}}(context.Context, chan *{{.Name}}Request) (chan *{{.Name}}Response, error)
{{- end}} {{/* streaming ifs*/}}
{{- end}} {{/*range Method*/}}
}

// Methods
// -------
{{- range .Service.Method}}
// * {{.Name}}
{{- end}}
//
-
// Message types
// -------------
{{- range .File.MessageType}}
// * {{.Name}}
{{- end}}
